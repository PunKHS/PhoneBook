<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- mvc:annotation-driven configures Spring MVC annotations
        Support for validating @Controller inputs with @Valid, if a JSR-303 Provider is present on the classpath.
        HttpMessageConverter support for @RequestBody method parameters and @ResponseBody method return values
        from @RequestMapping or @ExceptionHandler methods.
     -->
    <mvc:annotation-driven/>

    <!-- MessageSource ReloadableResourceBundleMessageSource configuration -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:locales/messages"/>
        <!--<property name="basename" value="src/main/resources/locales/messages" />-->
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="3600"/>
    </bean>

    <!-- Internalization in Session -->
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="ru"/>
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

    <!-- Internalization in Cookie -->
    <!--<bean id="localeResolver"-->
    <!--class="org.springframework.web.servlet.i18n.CookieLocaleResolver">-->
    <!--<property name="defaultLocale" value="ru"/>-->
    <!--<property name="cookieName" value="language"></property>-->
    <!--<property name="cookieMaxAge" value="3600"></property>-->
    <!--</bean>-->

    <!-- ViewResolver bean config for mapping strings to jsp views -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
        <!--<property name="order" value="1" />-->
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <mvc:view-controller path="/" view-name="/welcome"/>
    <mvc:view-controller path="/welcome.html" view-name="/welcome"/>
    <mvc:view-controller path="/employee_view.html" view-name="/employee/employee_view"/>
    <mvc:view-controller path="/employee_add.html" view-name="/employee/employee_add"/>
    <mvc:view-controller path="/employee_edit.html" view-name="/employee/employee_edit"/>
    <mvc:view-controller path="/about.html" view-name="/about/about"/>
    <mvc:view-controller path="/admin.html" view-name="/admin"/>
    <mvc:view-controller path="/login.html" view-name="/login"/>
    <mvc:view-controller path="/registration.html" view-name="/registration"/>

    <!-- Static Resources Configuration (get access to static sources such as CSS and JavaScript files) -->
    <mvc:resources mapping="/resources/**" location="/resources/"/>
    <!-- themes can be put in different folder such as
        <mvc:resources mapping="/resources/**" location="/resources/themeBlue" />
        <mvc:resources mapping="/resources/**" location="/resources/themeGreen" />
     -->

</beans>